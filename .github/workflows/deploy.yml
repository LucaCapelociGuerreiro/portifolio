name: 'CI/CD - Deploy Oracle Cloud'

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

env:
  IMAGE_NAME: 'meu-app'
  REGISTRY: 'ghcr.io'
  APP_PORT: 80

jobs:
  # ============================================
  # BUILD & PUSH DOCKER IMAGE
  # ============================================
  build-and-push:
    name: 🏗️ Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout do Código
        uses: actions/checkout@v4

      - name: 🔐 Login no GHCR (usando GITHUB_TOKEN)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: 🐳 Build e Push da Imagem
        run: |
          IMAGE_TAG=${{ github.sha }}
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_URI=${{ env.REGISTRY }}/$OWNER_LC/${{ env.IMAGE_NAME }}:$IMAGE_TAG

          echo "📦 Construindo imagem $IMAGE_URI..."
          docker build -t $IMAGE_URI ./meu-portifolio
          docker push $IMAGE_URI

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "OWNER_LC=$OWNER_LC" >> $GITHUB_ENV

  # ============================================
  # DEPLOY NA ORACLE CLOUD
  # ============================================
  deploy:
    name: 🚀 Deploy para Oracle Cloud
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: 📦 Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.ORACLE_SERVER_IP }}
          username: ${{ secrets.ORACLE_SSH_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            set -e
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            IMAGE_TAG=${{ github.sha }}
            OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            IMAGE_URI=${{ env.REGISTRY }}/$OWNER_LC/$IMAGE_NAME:$IMAGE_TAG

            echo "🔄 Atualizando sistema..."
            sudo apt-get update -qq

            echo "🐳 Verificando Docker..."
            if ! command -v docker &> /dev/null; then
              echo "📦 Instalando Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            echo "🐙 Verificando Docker Compose..."
            if ! command -v docker-compose &> /dev/null; then
              echo "📦 Instalando Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "🔐 Login no GitHub Container Registry..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            echo "📁 Criando pasta de deploy no servidor..."
            mkdir -p ~/portfolio-deploy
            cd ~/portfolio-deploy

            echo "📥 Baixando docker-compose.yml do repositório..."
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Accept: application/vnd.github.v3.raw" \
                 -o docker-compose.yml \
                 "https://api.github.com/repos/${{ github.repository }}/contents/meu-portifolio/docker-compose.yml"

            echo "📥 Baixando nginx.conf do repositório..."
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Accept: application/vnd.github.v3.raw" \
                 -o nginx.conf \
                 "https://api.github.com/repos/${{ github.repository }}/contents/meu-portifolio/nginx.conf"

            echo "🏗️ Atualizando docker-compose.yml com nova imagem..."
            sed -i "s|image: .*|image: $IMAGE_URI|g" docker-compose.yml

            echo "🛑 Parando containers antigos..."
            docker-compose down || true

            echo "🧹 Limpando imagens antigas..."
            docker image prune -af || true

            echo "🚀 Subindo nova versão com Docker Compose..."
            docker-compose up -d --force-recreate

            echo "🏥 Checando saúde da aplicação..."
            for i in {1..10}; do
              if curl -sSf http://localhost:${APP_PORT} > /dev/null; then
                echo "✅ Aplicação respondeu corretamente!"
                exit 0
              fi
              echo "⏳ Tentativa $i/10 - aguardando aplicação..."
              sleep 10
            done

            echo "❌ Deploy falhou!"
            exit 1

  # ============================================
  # NOTIFICAÇÕES
  # ============================================
  notify:
    name: 📢 Notificações
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: ✅ Sucesso
        if: needs.deploy.result == 'success'
        run: |
          echo "✅ Deploy realizado com sucesso!"
          echo "🌐 URL: http://${{ secrets.ORACLE_SERVER_IP }}"
          echo "📊 Commit: ${{ github.sha }}"
          echo "👤 Autor: ${{ github.actor }}"

      - name: 🚨 Falha
        if: needs.deploy.result == 'failure'
        run: |
          echo "❌ Deploy falhou!"
          echo "📊 Commit: ${{ github.sha }}"
          echo "👤 Autor: ${{ github.actor }}"
          echo "🔗 Ver logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
