name: 'CI/CD - Deploy Oracle Cloud'

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # ‚úÖ Necess√°rio para push no GHCR
  id-token: write

env:
  IMAGE_NAME: 'meu-app'
  REGISTRY: 'ghcr.io'
  APP_PORT: 80

jobs:
  build-and-push:
    name: üèóÔ∏è Build & Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: üõ†Ô∏è Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: üîê Login no GHCR (usando GITHUB_TOKEN)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: üê≥ Build e Push da Imagem
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_URI=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          
          echo "üì¶ Construindo imagem $IMAGE_URI..."
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

  deploy:
    name: üöÄ Deploy para Oracle Cloud
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
      - name: üì¶ Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.ORACLE_SERVER_IP }}
          username: ${{ secrets.ORACLE_SSH_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            set -e
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            IMAGE_TAG=${{ github.sha }}
            IMAGE_URI=${{ env.REGISTRY }}/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_TAG

            echo "üîÑ Atualizando sistema..."
            sudo apt-get update -qq

            echo "üê≥ Verificando Docker..."
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Instalando Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            echo "üîê Login no GHCR..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            echo "üì• Baixando nova imagem: $IMAGE_URI"
            docker pull $IMAGE_URI

            echo "üè∑Ô∏è Tagging como latest..."
            docker tag $IMAGE_URI ${{ env.REGISTRY }}/${{ github.repository_owner }}/$IMAGE_NAME:latest

            echo "üõë Parando container antigo..."
            docker stop $IMAGE_NAME || true
            docker rm $IMAGE_NAME || true

            echo "üöÄ Iniciando novo container..."
            docker run -d --name $IMAGE_NAME -p 80:80 ${{ env.REGISTRY }}/${{ github.repository_owner }}/$IMAGE_NAME:latest

            echo "üè• Checando sa√∫de da aplica√ß√£o..."
            for i in {1..10}; do
              if curl -sSf http://localhost:${APP_PORT} > /dev/null; then
                echo "‚úÖ Aplica√ß√£o respondeu corretamente!"
                exit 0
              fi
              echo "‚è≥ Tentativa $i/10 - aguardando aplica√ß√£o..."
              sleep 10
            done

            echo "‚ùå Deploy falhou!"
            exit 1
