# ==============================================================================
# PROMETHEUS CONFIGURATION - PORTFOLIO MONITORING
# ==============================================================================
# Configuração completa do Prometheus para monitoramento da aplicação
# Analista DevOps Sênior - Observabilidade e Monitoramento

global:
  # Intervalo padrão para coleta de métricas
  scrape_interval: 15s
  
  # Timeout para coleta de métricas
  scrape_timeout: 10s
  
  # Intervalo para avaliação de regras
  evaluation_interval: 15s
  
  # Labels externos adicionados a todas as métricas
  external_labels:
    monitor: 'portfolio-monitor'
    environment: 'production'
    region: 'oracle-cloud'
    project: 'portfolio'

# ==============================================================================
# CONFIGURAÇÃO DE REGRAS DE ALERTA
# ==============================================================================
rule_files:
  - "/etc/prometheus/rules/*.yml"

# ==============================================================================
# CONFIGURAÇÃO DO ALERTMANAGER
# ==============================================================================
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2

# ==============================================================================
# CONFIGURAÇÃO DE COLETA DE MÉTRICAS
# ==============================================================================
scrape_configs:
  
  # ==============================================================================
  # PROMETHEUS SELF-MONITORING
  # ==============================================================================
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
    honor_labels: false
    honor_timestamps: true
    
  # ==============================================================================
  # NODE EXPORTER - MÉTRICAS DO SISTEMA OPERACIONAL
  # ==============================================================================
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
        - 'node-exporter:9100'
        - 'localhost:9100'  # Node exporter do host
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: node-exporter:9100
    metric_relabel_configs:
      # Remove métricas desnecessárias para economizar espaço
      - source_labels: [__name__]
        regex: 'node_scrape_collector_.*'
        action: drop
      - source_labels: [__name__]
        regex: 'node_textfile_scrape_error'
        action: drop
  
  # ==============================================================================
  # CADVISOR - MÉTRICAS DE CONTAINERS DOCKER
  # ==============================================================================
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
    metric_relabel_configs:
      # Manter apenas métricas importantes para economizar espaço
      - source_labels: [__name__]
        regex: 'container_(cpu|memory|network|fs)_.*'
        action: keep
      - source_labels: [__name__]
        regex: 'container_spec_.*'
        action: keep
      - source_labels: [__name__]
        regex: 'container_start_time_seconds'
        action: keep
      - source_labels: [__name__]
        regex: 'container_last_seen'
        action: keep
  
  # ==============================================================================
  # BLACKBOX EXPORTER - MONITORAMENTO DE ENDPOINTS HTTP
  # ==============================================================================
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://localhost:80          # Aplicação principal
        - http://localhost:3000        # Next.js direto
        - http://localhost:3001        # Grafana
        - http://localhost:9090        # Prometheus
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    scrape_interval: 30s
    scrape_timeout: 10s
  
  # ==============================================================================
  # BLACKBOX EXPORTER - VERIFICAÇÃO ICMP (PING)
  # ==============================================================================
  - job_name: 'blackbox-icmp'
    metrics_path: /probe
    params:
      module: [icmp]
    static_configs:
      - targets:
        - 8.8.8.8          # Google DNS
        - 1.1.1.1          # Cloudflare DNS
        - github.com       # GitHub
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    scrape_interval: 60s
    scrape_timeout: 10s
  
  # ==============================================================================
  # DOCKER DAEMON METRICS (SE HABILITADO)
  # ==============================================================================
  - job_name: 'docker'
    static_configs:
      - targets: ['localhost:9323']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
  
  # ==============================================================================
  # NGINX METRICS (SE NGINX EXPORTER ESTIVER CONFIGURADO)
  # ==============================================================================
  - job_name: 'nginx'
    static_configs:
      - targets: ['localhost:9113']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
  
  # ==============================================================================
  # APLICAÇÃO NEXT.JS (SE MÉTRICAS CUSTOMIZADAS ESTIVEREM IMPLEMENTADAS)
  # ==============================================================================
  - job_name: 'nextjs-app'
    static_configs:
      - targets: ['app:3000']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /api/metrics
    honor_labels: true
    # Adicionar headers se necessário para autenticação
    # authorization:
    #   type: Bearer
    #   credentials: 'your-token-here'
  
  # ==============================================================================
  # ORACLE CLOUD INFRASTRUCTURE METRICS (SE OCI EXPORTER ESTIVER CONFIGURADO)
  # ==============================================================================
  - job_name: 'oci-exporter'
    static_configs:
      - targets: ['localhost:9161']
    scrape_interval: 60s
    scrape_timeout: 30s
    metrics_path: /metrics

# ==============================================================================
# CONFIGURAÇÕES DE ARMAZENAMENTO
# ==============================================================================
storage:
  tsdb:
    # Retenção de dados (15 dias para Always Free Tier)
    retention.time: 15d
    
    # Tamanho máximo de armazenamento (1GB para Always Free Tier)
    retention.size: 1GB
    
    # Compressão de dados
    wal-compression: true
    
    # Configurações de performance
    min-block-duration: 2h
    max-block-duration: 25h

# ==============================================================================
# CONFIGURAÇÕES DE REMOTE WRITE (OPCIONAL)
# ==============================================================================
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'go_.*'
#         action: drop

# ==============================================================================
# CONFIGURAÇÕES DE REMOTE READ (OPCIONAL)
# ==============================================================================
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint.com/api/v1/read"
#     read_recent: true

# ==============================================================================
# CONFIGURAÇÕES DE DESCOBERTA DE SERVIÇOS
# ==============================================================================
# Configuração para descoberta automática de serviços Docker
# docker_sd_configs:
#   - host: unix:///var/run/docker.sock
#     refresh_interval: 30s
#     filters:
#       - name: label
#         values: ["prometheus.scrape=true"]

# ==============================================================================
# CONFIGURAÇÕES DE TRACING (OPCIONAL)
# ==============================================================================
# tracing:
#   endpoint: "jaeger:14268/api/traces"
#   insecure: true
#   timeout: 5s
#   headers:
#     custom-header: "value"

# ==============================================================================
# CONFIGURAÇÕES DE FEATURE FLAGS
# ==============================================================================
# feature_flags:
#   - "promql-at-modifier"
#   - "promql-negative-offset"
#   - "remote-write-receiver"
#   - "exemplar-storage"

# ==============================================================================
# CONFIGURAÇÕES DE EXEMPLARS
# ==============================================================================
exemplar_storage:
  # Máximo de exemplars na memória
  max_exemplars: 100000

# ==============================================================================
# CONFIGURAÇÕES DE QUERY
# ==============================================================================
# Timeout máximo para queries
# query:
#   timeout: 2m
#   max_concurrency: 20
#   max_samples: 50000000

# ==============================================================================
# CONFIGURAÇÕES DE LOGGING
# ==============================================================================
# log_level: info
# log_format: logfmt