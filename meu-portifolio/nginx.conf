# ==============================================================================
# NGINX ULTRA-OTIMIZADO - ANALISTA DEVOPS SÊNIOR
# ==============================================================================
# Configuração de reverse proxy com cache agressivo para Oracle Cloud
# Reduz drasticamente CPU/RAM da aplicação Next.js

# Configurações globais otimizadas
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configurações de eventos otimizadas
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ========================================================================
    # CONFIGURAÇÕES BÁSICAS DE PERFORMANCE
    # ========================================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Configurações de logging otimizadas
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Otimizações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Configurações de buffer otimizadas
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # ========================================================================
    # CONFIGURAÇÕES DE COMPRESSÃO AGRESSIVA
    # ========================================================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;
    gzip_comp_level 6;
    
    # ========================================================================
    # CONFIGURAÇÕES DE CACHE ULTRA-AGRESSIVO
    # ========================================================================
    
    # Cache de proxy
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
    
    # Cache de arquivos estáticos
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # ========================================================================
    # UPSTREAM PARA APLICAÇÃO NEXT.JS
    # ========================================================================
    
    upstream nextjs_upstream {
        server app:3000;
        keepalive 64;
    }
    
    # ========================================================================
    # SERVIDOR PRINCIPAL
    # ========================================================================
    
    server {
        listen 80;
        server_name _;
        
        # Configurações de segurança
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # ====================================================================
        # CACHE ULTRA-AGRESSIVO PARA ASSETS ESTÁTICOS
        # ====================================================================
        
        # Assets do Next.js (_next/static)
        location /_next/static/ {
            proxy_cache STATIC;
            proxy_cache_valid 200 1y;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Imagens e assets públicos
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            proxy_cache STATIC;
            proxy_cache_valid 200 30d;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            
            add_header Cache-Control "public, max-age=2592000";
            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ====================================================================
        # CACHE INTELIGENTE PARA PÁGINAS HTML
        # ====================================================================
        
        # Páginas estáticas com cache moderado
        location / {
            proxy_cache STATIC;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            
            # Headers de cache inteligente
            add_header Cache-Control "public, max-age=3600";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Configurações de proxy otimizadas
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts otimizados
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffers otimizados
            proxy_buffer_size 4k;
            proxy_buffers 100 8k;
            proxy_busy_buffers_size 16k;
            proxy_temp_file_write_size 64k;
        }
        
        # ====================================================================
        # HEALTH CHECK E MONITORAMENTO
        # ====================================================================
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Status do Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }
        
        # ====================================================================
        # CONFIGURAÇÕES DE ERRO
        # ====================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}